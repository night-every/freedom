<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Raspberry Pi Zero 2 W 配置记录</title>
    <link href="/freedom/2022/09/22/Raspberry%20Pi%20Zero%202%20W%20%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/"/>
    <url>/freedom/2022/09/22/Raspberry%20Pi%20Zero%202%20W%20%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="Raspberry-Pi-Zero-2-W-配置记录"><a href="#Raspberry-Pi-Zero-2-W-配置记录" class="headerlink" title="Raspberry Pi Zero 2 W 配置记录"></a>Raspberry Pi Zero 2 W 配置记录</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>供不应求，全球缺芯</strong></p><p>目前树莓派涨价的有点严重，Zero 2 W 都需要至少RM 200了，奉劝各位等明年再打算买吧。</p><hr><p><u><strong>Raspberry Pi Zero 2 W 规格</strong></u></p><p>外形：65mm×30mm </p><p>处理器：Broadcom BCM2710A1，四核64位SOC （ARM Cortex-A53 @ 1GHz） </p><p>内存：512MB LPDDR2 </p><p>连接：</p><p>•2.4GHz IEEE 802.11b&#x2F;g&#x2F;n无线LAN，蓝牙4.2，ble， 机载天线 </p><p>•1×USB 2.0接口与OTG •与HAT兼容的40针I&#x2F;O标头足迹 </p><p>•microSD卡插槽 •迷你HDMI端口 •CSI-2相机连接器 </p><p>视频：</p><p>    •HDMI接口 </p><p>    •复合视频 </p><p>多媒体：</p><p>    •H.264，MPEG-4解码（1080P30） </p><p>    •H.264 Encode（1080P30） </p><p>    •OpenGL ES 1.1，2.0图形 </p><p>输入功率：5V DC 2.5A </p><p>工作温度：-20°C至 +70°C </p><p>生产寿命：Raspberry Pi Zero 2 W将保持生产直到至少至少直到 2028年1月</p><p><img src="https://cdn.jsdelivr.net/gh/night-every/blogs-images-bed@main/blogs/images/202209061757058.png"></p><hr><h2 id="安装前准备"><a href="#安装前准备" class="headerlink" title="安装前准备"></a>安装前准备</h2><ul><li><p>8GB或以上的 Micro SD</p></li><li><p>Micro SD 适配器</p></li><li><p>Micro Usb 线</p></li><li><p>运行linux的电脑</p></li></ul><hr><p>笔记本用上Gentoo了，Raspberry Pi必须上Arch ：）</p><h2 id="Arch-Linux-ARM-基础安装"><a href="#Arch-Linux-ARM-基础安装" class="headerlink" title="Arch Linux ARM 基础安装"></a>Arch Linux ARM 基础安装</h2><blockquote><p>引用：<a href="https://archlinuxarm.org/platforms/armv8/broadcom/raspberry-pi-zero-2">Raspberry Pi Zero 2 | Arch Linux ARM</a></p></blockquote><p><strong>使用ARMv7</strong> </p><h3 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h3><p>将以下说明中的 sdX 替换为你电脑上显示的 SD 卡的设备名称。</p><blockquote><p>可以使用 lsblk 命令来查看具体分区</p><p>例如：&#x2F;dev&#x2F;sda , &#x2F;dev&#x2F;sdb</p></blockquote><ol><li>启用cfdisk对 Micro SD卡分区</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">sudo cfdisk /dev/sdX<br></code></pre></td></tr></table></figure><p>开始分区：</p><p>首先:</p><ol><li><p>按 NEW </p></li><li><p>Partition size: 200M （填200M)</p></li><li><p>选择primary</p></li><li><p>选择 Type</p></li><li><p>往上划选择 W95 FAT32 (LBA)</p></li></ol><p>此时应该是这样的：</p><p>例子 ：</p><img title="" src="https://cdn.jsdelivr.net/gh/night-every/blogs-images-bed@main/blogs/images/202209080018955.png" alt="" width="663" data-align="inline"><p>然后：</p><ol start="6"><li><p>选择第二个分区 （Free space)</p></li><li><p>按 NEW</p></li><li><p>Partition size 直接按 <Enter></p></li><li><p>选择 primary</p></li><li><p>最后选择 Write</p></li><li><p>打 yes</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/night-every/blogs-images-bed@main/blogs/images/202209080024820.png"></p><ol start="12"><li>按 quit 就可以退出完成了</li></ol><hr><h3 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h3><p>为了方便，可以在家目录进行操作. 例如：&#x2F;home&#x2F;edmund</p><ol><li><p>先换成 root</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">su<br></code></pre></td></tr></table></figure></li><li><p>格式化第一个分区（200M）为 FAT 文件系统并挂载在新创建的文件夹， boot</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mkfs.vfat /dev/sdX1<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> boot<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mount /dev/sdX1 boot<br></code></pre></td></tr></table></figure></li><li><p>格式化第二个分区为 EXT4 文件系统并挂载在新创建的文件夹， root</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mkfs.ext4 /dev/sdX2<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> root<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mount /dev/sdX2 root<br></code></pre></td></tr></table></figure></li><li><p>下载然后解压系统到 root 文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget http://os.archlinuxarm.org/os/ArchLinuxARM-rpi-armv7-latest.tar.gz<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bsdtar -xpf ArchLinuxARM-rpi-armv7-latest.tar.gz -C root<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sync</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> root/boot/* boot<br></code></pre></td></tr></table></figure><blockquote><p>如果出现类似情况：</p><p>mv: failed to preserve ownership for ‘boot&#x2F;dtbs&#x2F;apple&#x2F;t8103-j293.dtb’: Operation not permitted</p><p>不必担心，没事的，继续</p></blockquote></li></ol><h3 id="设置开机后自动连接wifi或热点和ssh自启动"><a href="#设置开机后自动连接wifi或热点和ssh自启动" class="headerlink" title="设置开机后自动连接wifi或热点和ssh自启动"></a>设置开机后自动连接wifi或热点和ssh自启动</h3><p>重点来了，如果家里没有合适的显示器，我们就难以操作开机后的Raspberry pi了。因此我们可以借由开机后让它自动连接wifi或者热点，然后sshd自启动，就可以使用 ssh 愉快地连接了 ლ(╹◡╹ლ)</p><p>还是使用root</p><ol><li><p>编辑 root&#x2F;etc&#x2F;systemd&#x2F;network&#x2F;wlan0.network </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano -w root/etc/systemd/network/wlan0.network<br></code></pre></td></tr></table></figure><p>输入以下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">[Match]<br>Name=wlan0<br><br>[Network]<br>DHCP=yes<br></code></pre></td></tr></table></figure><p>然后保存离开</p></li><li><p>然后编辑 root&#x2F;etc&#x2F;wpa_supplicant&#x2F;wpa_supplicant-wlan0.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano -w root/etc/wpa_supplicant/wpa_supplicant-wlan0.conf<br></code></pre></td></tr></table></figure><p>输入一下内容(以下内容是例子，只能参考)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell">country=MY #我是马来西亚人 (・∀・)<br>ctrl_interface=/run/wpa_supplicant<br>update_config=1<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">AP scanning</span><br>ap_scan=1<br><br>network=&#123;<br>    ssid=&quot;你的热点&quot; #例如 &quot;OPPO-A5-2020&quot;<br>    psk=&quot;你的密码&quot; #例如：&quot;duiduidui&quot;&quot; <br>        id_str=&quot;跟热点名字一样即可&quot; #例如 &quot;OPPO-A5-2020&quot;<br>        priority=9<br>&#125;<br><br>network=&#123;<br>    ssid=&quot;你的wifi&quot; #例如： duiduidui@unifi<br>    psk=&quot;你的密码&quot;<br>        id_str=&quot;跟wifi名字一样即可&quot;<br>        priority=2<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><p>    然后保存离开</p><ol start="4"><li><p>执行</p><p><code>bash</code><br>ln -s <br> &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;wpa_supplicant@.service <br> root&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;multi-user.target.wants&#x2F;<a href="mailto:&#x77;&#112;&#x61;&#x5f;&#115;&#x75;&#x70;&#112;&#108;&#x69;&#x63;&#x61;&#110;&#x74;&#64;&#119;&#108;&#x61;&#x6e;&#48;&#x2e;&#x73;&#x65;&#x72;&#118;&#x69;&#x63;&#x65;">&#x77;&#112;&#x61;&#x5f;&#115;&#x75;&#x70;&#112;&#108;&#x69;&#x63;&#x61;&#110;&#x74;&#64;&#119;&#108;&#x61;&#x6e;&#48;&#x2e;&#x73;&#x65;&#x72;&#118;&#x69;&#x63;&#x65;</a></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">   <br></code></pre></td></tr></table></figure><p>然后在 boot 文件夹下创建 ssh 文件</p></li><li><p>&#96;&#96;&#96;bash<br>cd boot &amp;&amp; touch ssh</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><br>最后卸载挂载点<br><br>```bash<br>cd ~<br>umount boot root<br></code></pre></td></tr></table></figure><p>至此告一段落 ：）</p><hr></li></ol><h3 id="登入系统"><a href="#登入系统" class="headerlink" title="登入系统"></a>登入系统</h3><ol><li><p>把 Micro SD 从电脑拔下来，插进 Raspberry Pi，然后插上电源</p><p>如图：</p><p><img src="https://cdn.jsdelivr.net/gh/night-every/blogs-images-bed@main/blogs/images/Zero-2-W.jpg"></p></li><li><p>然后在电脑使用浏览器访问路由器后台获得Raspberry Pi的内网ip</p><p>例如： 192.168.0.1</p></li></ol><p>    Raspberry Pi此时 <u>hostname</u> 应该是 <strong><u>alarmpi</u></strong> 或类似的名字</p><blockquote><p> Hostname可以在开机后更改</p></blockquote><p>    例子（已经改了 Hostname ) ：</p><p>    <img src="https://cdn.jsdelivr.net/gh/night-every/blogs-images-bed@main/blogs/images/202209222152182.png"></p><p>    记下来</p><ol start="3"><li><p>打开终端，执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh 用户@内网ip -p 22<br></code></pre></td></tr></table></figure></li></ol><blockquote><p>内网ip视每个人情况而定，例如我的是192.168.0.128<br>那么我需要执行: ssh <a href="mailto:&#97;&#108;&#x61;&#114;&#109;&#x40;&#49;&#x39;&#50;&#46;&#49;&#x36;&#x38;&#x2e;&#48;&#x2e;&#49;&#50;&#x38;">&#97;&#108;&#x61;&#114;&#109;&#x40;&#49;&#x39;&#50;&#46;&#49;&#x36;&#x38;&#x2e;&#48;&#x2e;&#49;&#50;&#x38;</a> -p 22    </p><p>初始用户有两个，分别是alarm和root。alarm的密码是alarm, root的密码是root</p></blockquote><p>登陆成功后会显示一下内容：</p><p><img src="https://cdn.jsdelivr.net/gh/night-every/blogs-images-bed@main/blogs/images/202209222201873.png">  </p><p>最后执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacman-key --init<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacman-key --populate archlinuxarm<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacman -Syyu<br></code></pre></td></tr></table></figure><p>至此，告一段落 😃😃</p><p>进阶配置可以跟着教程和archwiki配置，之后可能在这里更新</p><p>撒花 🥳🥳🥳🥳</p><h2 id="教程推荐"><a href="#教程推荐" class="headerlink" title="教程推荐"></a>教程推荐</h2><ul><li><p><a href="https://archlinuxarm.org/platforms/armv8/broadcom/raspberry-pi-zero-2">Raspberry Pi Zero 2 | Arch Linux ARM</a></p></li><li><p><a href="https://arch.icekylin.online/">https://arch.icekylin.online/</a></p></li><li><p><a href="https://chirsz.cc/blog/2020-09/install-archlinux-rp0w.html">在树莓派 Zero W 上安装 Arch Linux | 子飞的网络日志</a></p></li><li><p><a href="https://ladvien.com/installing-arch-linux-raspberry-pi-zero-w/">Installing Arch Linux on Raspberry Pi with Immediate WiFi Access &amp;#8211;</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
      <category>Arch-Linux</category>
      
      <category>Arm</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Arch-Linux</tag>
      
      <tag>Arm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>为什么我选择了Gentoo Linux</title>
    <link href="/freedom/2022/07/27/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E9%80%89%E6%8B%A9%E4%BA%86Gentoo%20Linux/"/>
    <url>/freedom/2022/07/27/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E9%80%89%E6%8B%A9%E4%BA%86Gentoo%20Linux/</url>
    
    <content type="html"><![CDATA[<h1 id="为什么我选择了Gentoo-Linux"><a href="#为什么我选择了Gentoo-Linux" class="headerlink" title="为什么我选择了Gentoo Linux"></a>为什么我选择了Gentoo Linux</h1><p>2022年年头我成功地装上了Gentoo.</p><h1 id="Gentoo-Linux是什么"><a href="#Gentoo-Linux是什么" class="headerlink" title="Gentoo Linux是什么"></a>Gentoo Linux是什么</h1><p>引用官方的说法：</p><p>Gentoo is a free operating system based on Linux that can be<br>automatically optimized and customized for just about any application or need. Extreme configurability, performance, and a top-notch user and developer community are all hallmarks of the Gentoo experience.</p><p>定制，优化以及极致的可配置性和性能，就是我选它来作为我日常使用的操作系统的理由。</p><h1 id="Gentoo-Linux的特点"><a href="#Gentoo-Linux的特点" class="headerlink" title="Gentoo Linux的特点"></a>Gentoo Linux的特点</h1><ul><li><p><u><strong>高度自定制性</strong></u></p><p>自定制性是Gentoo Linux的特点之一，因为它是一个基于源代码的（source-based）发行版，安装时可以选择从源代码编译用户所需要安装的软件包或者选择预先编译好的二进制包。</p><p>其次，用户可以拥有选择自由。Gentoo的一切都是为了自由选择。用户可以自己选择想要编译的一切内容、选择安装Gentoo的方式、选择想用的系统日志程序等等。</p><blockquote><p>例如： Openrc or systemd</p></blockquote></li><li><p><strong><u>灵活性</u></strong></p><p><strong>Portage - the heart of Gentoo</strong> </p><p>Gentoo Linux使用Portage作为软件包管理器。Portage是Gentoo的核心和特色，Portage会按照你作的具体配置（USE FLAG） 自动构建一个软件包的定制版本。使用者可以根据自己的硬件配置，启用软件包中你想要的一些可选特性或者不启用那些你不想要的。此过程中用户可以调整编译器和目标程序的选项以符合系统需要或自己的喜好。Portage 支持软件包同时安装多个版本，例如，<code>gtk+</code>包可以同时安装两个<code>2.24</code>版本<code>3.6</code>。</p><ul><li><p><u>USE FLAG</u></p><blockquote><p>引用 <a href="https://wiki.gentoo.org/wiki/Handbook:AMD64/Working/USE">Handbook:AMD64&#x2F;Working&#x2F;USE - Gentoo Wiki</a></p></blockquote><p>安装 Gentoo 时，用户会根据他们使用的环境做出选择。服务器的设置不同于工作站的设置。游戏工作站不同于 3D 渲染工作站。</p><p>这不仅适用于选择要安装的软件包，还适用于某个软件包应支持的功能。如果不需要 OpenGL，为什么有人会费心安装和维护 OpenGL 并在大多数包中构建 OpenGL 支持？如果有人不想使用 KDE，如果没有 KDE 支持的包也能完美运行，他们为什么还要费心编译支持 KDE 的包呢？</p><p>为了帮助用户决定安装&#x2F;激活什么和不激活什么，Gentoo 希望用户以一种简单的方式指定他&#x2F;她的环境。这迫使用户决定他们真正想要什么，并简化 Portage 做出有用决定的过程。</p><p><u><strong>USE标志的定义</strong></u></p><p>输入 USE 标志。这样的标志是体现特定概念的支持和依赖信息的关键字。如果某个 USE 标志设置为启用，那么 Portage 将知道系统管理员希望支持所选关键字。当然，这可能会改变包的依赖信息。根据 USE 标志，这可能需要拉入更多的依赖项以完成请求的依赖项更改。</p><p>看一个具体的例子：<code>kde</code> USE 标志。如果未在USE变量中设置此标志（或者如果该值以减号为前缀：）<code>-kde</code>，则所有具有可选 KDE 支持的包都将在不支持 KDE 的情况下编译。所有具有可选 KDE 依赖项的软件包都将在不安装 KDE 库的情况下安装（作为依赖项）。</p><p>当该<code>kde</code>标志设置为启用时，这些包将使用KDE 支持进行编译，并且 KDE 库将作为依赖项安装。</p><blockquote><p>kde 是 一种著名的运行于Linux、Unix 以及FreeBSD 等操作系统上的自由图形桌面环境</p></blockquote><p>通过正确定义 USE 标志，系统将专门针对系统管理员的需求进行定制。</p></li></ul></li><li><p><strong><u>缺点</u></strong></p><ul><li><p>安装系统使用的时间比较长，尤其大型软件（<del>Chromium讲的就是你</del>）因为是在本地进行编译。安裝一個包，都要从源代码碼編譯。电脑配置不太好的話，安裝系統需要很长的一段时间。</p></li><li><p>Logo 有点丑 （不是 </p></li><li><p>不太适合没有基础的新手</p><p><img title="" src="https://i.redd.it/25kes8d904f61.png" alt="" width="255" data-align="center"><img title="" src="https://i.redd.it/ps4v1vipfyc71.png" alt="" width="615" data-align="inline"></p><blockquote><p>Source: Reddit</p></blockquote><hr></li></ul><p><img src="https://cdn.jsdelivr.net/gh/night-every/blogs-images-bed@main/blogs/images/neofetch.png"></p></li></ul><blockquote><p>笔者的电脑配置，安装基本系统使用了大半天的时间（包括编译工具链，From Stage 1 编译到 Stage4），基本系统加桌面要花费两天时间编译。</p></blockquote><h1 id="安装Gentoo前您需要准备什么？"><a href="#安装Gentoo前您需要准备什么？" class="headerlink" title="安装Gentoo前您需要准备什么？"></a>安装Gentoo前您需要准备什么？</h1><ul><li><p>做好心理准备，你必须清楚您将会面对到困难和阻碍。</p></li><li><p>当你google找不到答案时可以寻找帮助 <a href="https://t.me/gentoo_zh">Telegram: Contact @gentoo_zh</a></p></li><li><p>学会选择</p></li><li><p>空闲时间</p></li><li><p>决心</p></li><li><p><del>装逼</del></p></li></ul><h1 id="Gentoo哲学"><a href="#Gentoo哲学" class="headerlink" title="Gentoo哲学"></a>Gentoo哲学</h1><blockquote><p>引用 <a href="https://www.gentoo.org/get-started/philosophy/">The philosophy of Gentoo – Gentoo Linux</a></p></blockquote><p>每个用户都有他们需要做的工作。Gentoo 的目标是设计工具和系统，让用户在他们认为合适的情况下尽可能愉快和高效地完成这项工作。我们的工具应该是一种使用的乐趣，并且应该帮助用户欣赏 Linux 和自由软件社区的丰富性，以及自由软件的灵活性。这只有在工具被设计为反映和传递用户的意愿时才有可能，并且对于原材料的最终形式（源代码）保持开放的可能性。如果工具强迫用户做某事方式，那么该工具是针对用户而不是为用户工作的。我们都经历过工具似乎将它们各自的意志强加给我们的情况。这是倒退的，与 Gentoo 哲学相反。</p><p>换句话说，Gentoo 的理念是创造更好的工具。当一个工具完美地完成它的工作时，你甚至可能不会很清楚它的存在，因为它不会干扰并让人们知道它的存在，也不会在你不想要它时强迫你与之交互。工具服务于用户而不是用户服务于工具。</p><p>Gentoo 的目标是努力创造近乎理想的工具。可以满足具有不同目标的许多不同用户的需求的工具。当您找到一个完全符合您要求的工具时，您不喜欢吗？感觉不是很好吗？我们的使命是让尽可能多的人感受到这种感觉。</p><h1 id="教程推荐"><a href="#教程推荐" class="headerlink" title="教程推荐"></a>教程推荐</h1><ul><li><p><a href="https://bitbili.net/gentoo-linux-installation-and-usage-tutorial.html">Gentoo Linux 安装及使用指南&amp;ensp;-&amp;ensp;bitbili.net</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/122222365">https://zhuanlan.zhihu.com/p/122222365</a></p></li><li><p><a href="https://wiki.gentoo.org/wiki/Handbook:AMD64/Full/Installation/zh-cn">https://wiki.gentoo.org/wiki/Handbook:AMD64/Full/Installation/zh-cn</a></p></li><li><p><a href="https://litterhougelangley.club/blog/2021/05/21/gentoo/">https://litterhougelangley.club/blog/2021/05/21/gentoo/</a></p></li></ul><hr><img title="" src="https://www.gentoo.org/assets/img/wallpaper/abducted/gentoo-abducted-1280x1024.png" alt="Gentoo" width="657">]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
      <category>Gentoo-Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Gentoo-Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
